
&НаКлиенте
Процедура КалендарьПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуТекущегоЭлементаПланировщика();
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗанятия();
	
	Календарь.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	Календарь.КратностьПериодическогоВарианта = 24;
	
	Календарь.ОтступСКонцаПереносаШкалыВремени = 3;
	Календарь.ОтступСНачалаПереносаШкалыВремени = 8;
	
	Календарь.ВыравниватьГраницыЭлементовПоШкалеВремени = Ложь;
	
	Календарь.ТекущиеПериодыОтображения.Очистить();
	НачалоПериода = НачалоНедели(ТекущаяДатаСеанса());
	КонецПериода = КонецНедели(ТекущаяДатаСеанса());
	НовыйЭлементПериод = Календарь.ТекущиеПериодыОтображения.Добавить(НачалоПериода, КонецПериода);
	
КонецПроцедуры

Процедура ЗаполнитьЗанятия()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Группы.Тренер КАК Тренер,
		|	Группы.Расписание КАК Расписание,
		|	Группы.Ссылка КАК Группа
		|ПОМЕСТИТЬ ВТ_Расписаний
		|ИЗ
		|	Справочник.Группы КАК Группы
		|ГДЕ
		|	Группы.Тренер = &Тренер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШаблонЗаполнения.Ссылка КАК ГрафикРаботы,
		|	МАКСИМУМ(ШаблонЗаполнения.НомерСтроки) КАК ДлинаЦикла
		|ПОМЕСТИТЬ ВТДлинаЦиклаГрафиков
		|ИЗ
		|	ВТ_Расписаний КАК ВТ_Расписаний
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Календари.ШаблонЗаполнения КАК ШаблонЗаполнения
		|		ПО ВТ_Расписаний.Расписание = ШаблонЗаполнения.Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ШаблонЗаполнения.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КалендарныеГрафики.Календарь КАК ГрафикРаботы,
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика,
		|	РАЗНОСТЬДАТ(Календари.ДатаОтсчета, КалендарныеГрафики.ДатаГрафика, ДЕНЬ) + 1 КАК ДнейОтДатыОтсчета,
		|	ЛОЖЬ КАК ПредпраздничныйДень
		|ПОМЕСТИТЬ ВТДниВключенныеВГрафик
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Расписаний КАК ВТ_Расписаний
		|			ПО ВТ_Расписаний.Расписание = Календари.Ссылка
		|		ПО КалендарныеГрафики.Календарь = Календари.Ссылка
		|		И КалендарныеГрафики.ДатаГрафика МЕЖДУ &ДатаНачала И &ДатаОкончания
		|		И КалендарныеГрафики.ДеньВключенВГрафик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДниВключенныеВГрафик.ГрафикРаботы КАК ГрафикРаботы,
		|	ДниВключенныеВГрафик.ДатаГрафика КАК ДатаГрафика,
		|	ВЫБОР
		|		КОГДА ДниВключенныеВГрафик.РезультатДеленияПоМодулю = 0
		|			ТОГДА ДниВключенныеВГрафик.ДлинаЦикла
		|		ИНАЧЕ ДниВключенныеВГрафик.РезультатДеленияПоМодулю
		|	КОНЕЦ КАК НомерДня,
		|	ДниВключенныеВГрафик.ПредпраздничныйДень КАК ПредпраздничныйДень
		|ПОМЕСТИТЬ ВТДатыНомераДней
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДниВключенныеВГрафик.ГрафикРаботы КАК ГрафикРаботы,
		|		ДниВключенныеВГрафик.ДатаГрафика КАК ДатаГрафика,
		|		ДниВключенныеВГрафик.ПредпраздничныйДень КАК ПредпраздничныйДень,
		|		ДниВключенныеВГрафик.ДлинаЦикла КАК ДлинаЦикла,
		|		ДниВключенныеВГрафик.ДнейОтДатыОтсчета - ДниВключенныеВГрафик.ЦелаяЧастьРезультатаДеления *
		|			ДниВключенныеВГрафик.ДлинаЦикла КАК РезультатДеленияПоМодулю
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ДниВключенныеВГрафик.ГрафикРаботы КАК ГрафикРаботы,
		|			ДниВключенныеВГрафик.ДатаГрафика КАК ДатаГрафика,
		|			ДниВключенныеВГрафик.ПредпраздничныйДень КАК ПредпраздничныйДень,
		|			ДниВключенныеВГрафик.ДнейОтДатыОтсчета КАК ДнейОтДатыОтсчета,
		|			ДлинаЦиклов.ДлинаЦикла КАК ДлинаЦикла,
		|			ВЫРАЗИТЬ(ДниВключенныеВГрафик.ДнейОтДатыОтсчета / ДлинаЦиклов.ДлинаЦикла КАК ЧИСЛО(15, 0)) - ВЫБОР
		|				КОГДА ВЫРАЗИТЬ(ДниВключенныеВГрафик.ДнейОтДатыОтсчета / ДлинаЦиклов.ДлинаЦикла КАК ЧИСЛО(15,
		|					0)) > ДниВключенныеВГрафик.ДнейОтДатыОтсчета / ДлинаЦиклов.ДлинаЦикла
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЦелаяЧастьРезультатаДеления
		|		ИЗ
		|			ВТДниВключенныеВГрафик КАК ДниВключенныеВГрафик
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
		|				ПО ДниВключенныеВГрафик.ГрафикРаботы = Календари.Ссылка
		|				И Календари.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияГрафикаРаботы.ПоЦикламПроизвольнойДлины)
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДлинаЦиклаГрафиков КАК ДлинаЦиклов
		|				ПО ДниВключенныеВГрафик.ГрафикРаботы = ДлинаЦиклов.ГрафикРаботы) КАК ДниВключенныеВГрафик) КАК
		|		ДниВключенныеВГрафик
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДниВключенныеВГрафик.ГрафикРаботы,
		|	ДниВключенныеВГрафик.ДатаГрафика,
		|	ДЕНЬНЕДЕЛИ(ДниВключенныеВГрафик.ДатаГрафика),
		|	ДниВключенныеВГрафик.ПредпраздничныйДень
		|ИЗ
		|	ВТДниВключенныеВГрафик КАК ДниВключенныеВГрафик
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
		|		ПО ДниВключенныеВГрафик.ГрафикРаботы = Календари.Ссылка
		|ГДЕ
		|	Календари.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияГрафикаРаботы.ПоНеделям)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДниВключенныеВГрафик.ГрафикРаботы КАК ГрафикРаботы,
		|	ДниВключенныеВГрафик.ДатаГрафика КАК ДатаГрафика,
		|	ДниВключенныеВГрафик.НомерДня КАК НомерДня,
		|	ЕСТЬNULL(РасписанияРаботыПредпраздничногоДня.ВремяНачала, РасписанияРаботы.ВремяНачала) КАК ВремяНачала,
		|	ЕСТЬNULL(РасписанияРаботыПредпраздничногоДня.ВремяОкончания, РасписанияРаботы.ВремяОкончания) КАК ВремяОкончания
		|ПОМЕСТИТЬ ВТРасписанияРаботы
		|ИЗ
		|	ВТДатыНомераДней КАК ДниВключенныеВГрафик
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Календари.РасписаниеРаботы КАК РасписанияРаботы
		|		ПО РасписанияРаботы.Ссылка = ДниВключенныеВГрафик.ГрафикРаботы
		|		И РасписанияРаботы.НомерДня = ДниВключенныеВГрафик.НомерДня
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Календари.РасписаниеРаботы КАК РасписанияРаботыПредпраздничногоДня
		|		ПО РасписанияРаботыПредпраздничногоДня.Ссылка = ДниВключенныеВГрафик.ГрафикРаботы
		|		И РасписанияРаботыПредпраздничногоДня.НомерДня = 0
		|		И ДниВключенныеВГрафик.ПредпраздничныйДень
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДниВключенныеВГрафик.ГрафикРаботы,
		|	ДниВключенныеВГрафик.ДатаГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписанияРаботы.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика КАК ДатаГрафика,
		|	ВТРасписанияРаботы.НомерДня КАК НомерДня,
		|	ВТРасписанияРаботы.ВремяНачала КАК ВремяНачала,
		|	ВТРасписанияРаботы.ВремяОкончания КАК ВремяОкончания,
		|	ВТ_Расписаний.Группа КАК Группа
		|ИЗ
		|	ВТРасписанияРаботы КАК ВТРасписанияРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Расписаний КАК ВТ_Расписаний
		|		ПО ВТРасписанияРаботы.ГрафикРаботы = ВТ_Расписаний.Расписание";
	
	Запрос.УстановитьПараметр("Тренер", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ДатаНачала", НачалоНедели(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецНедели(ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДатаНачала = Выборка.ДатаГрафика + (Выборка.ВремяНачала - Дата(1,1,1));
		ДатаОкончания = Выборка.ДатаГрафика + (Выборка.ВремяОкончания - Дата(1,1,1));
		НовыйЭлемент = Календарь.Элементы.Добавить(ДатаНачала, ДатаОкончания);
		НовыйЭлемент.Текст = Выборка.ГрафикРаботы;
		НовыйЭлемент.Значение = Выборка.Группа;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуТекущегоЭлементаПланировщика()
	
	ЗначениеЭлемента = Элементы.Календарь.ВыделенныеЭлементы[0].Значение;
		 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ЗначениеЭлемента);
	ОткрытьФорму("Документ.Занятие.Форма.ФормаДокумента", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры
